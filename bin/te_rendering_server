#!/usr/bin/env php
<?php
/*
 * @author Anakeen
 * @package TE
*/
/**
 * Read te database to do file transformation (conversion) in waiting
 */

$TE_HOME = getenv('TE_HOME');
if ($TE_HOME === false) {
    $my_path = $argv[0];
    if (is_link($my_path)) {
        $my_path = readlink($my_path);
    }
    $dirname = dirname($my_path);
    $dirname = realpath("$dirname/../");
    if ($dirname === false) {
        error_log("Could not get TE_HOME path!");
        exit(1);
    }
    $TE_HOME = $dirname;
    putenv("TE_HOME=$TE_HOME");
}
set_include_path(get_include_path() . PATH_SEPARATOR . "$TE_HOME" . DIRECTORY_SEPARATOR . "lib" . PATH_SEPARATOR . "$TE_HOME" . DIRECTORY_SEPARATOR . "lib/TE");

include_once ("TE/Class.TERendering.php");
//  error_reporting(E_ALL);
$targ = getArgv($argv);

$db = $targ["db"];
$maxclient = $targ["maxclient"];
$workDir = $targ["work-directory"];
$filelogin = $targ["loginfile"];
$purge_days = $targ["purge-days"];
$purge_interval = $targ["purge-interval"];
if ($filelogin) {
    $logincontent = file_get_contents($filelogin);
    if (preg_match('/URL_CALLBACK_LOGIN=([^ \n\r\t]+)/', $logincontent, $matches)) {
        $login = $matches[1];
    }
    if (preg_match('/URL_CALLBACK_PASSWORD=([^ \n\r\t]+)/', $logincontent, $matches)) {
        $pwd = $matches[1];
    }
} else {
    $login = $targ["clogin"];
    $pwd = $targ["cpassword"];
}

$s = new TERendering();
if ($db) $s->dbaccess = $db;
if ($maxclient) $s->max_client = $maxclient;
if ($workDir) $s->workDir = $workDir;
if ($purge_days) $s->purge_days = $purge_days;
if ($purge_interval) $s->purge_interval = $purge_interval;

$s->flushProcessingTasks();

$s->listenloop();
